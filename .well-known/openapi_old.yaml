{
  "openapi": "3.1.0",
  "info": {
    "title": "AITickerChat Retrieval Plugin API",
    "description": "A retrieval API for querying and filtering SEC filing documents and Transcripts as well as financial data including historical financial statements, analyst estimates, revenue segment breakdown, candlestick data, stock quotes, insider transactions and dividends based on natural language queries and metadata.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://data.aitickerchat.com"
    }
  ],
  "paths": {
    "/query": {
      "post": {
        "summary": "Accepts search query objects with query, filter, optional sort_order and limit. Break down complex questions into sub-questions. Required filters include symbol and form_types with optional fiscal_year, fiscal_quarter. Use sort_order desc and limit 1 to find most recent document.",
        "operationId": "query-post",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/financial-statements": {
      "post": {
        "operationId": "financial-statements-post",
        "summary": "Request financial statement data in json format. Specify financial statement type, symbol and frequency and get up to 30 years of historical actuals from income statements, balance sheets or cash flow statements.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialStatement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted financial data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/quote": {
      "post": {
        "operationId": "quote-post",
        "x-openai-isConsequential": false,
        "summary": "Get real-time quote data for US stocks. Returns Current Price (c), Change (d), Percent change (dp), High (h), Low (l), Open (o), and Previous Close (pc)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/company-profile": {
      "post": {
        "operationId": "company-profile-post",
        "x-openai-isConsequential": false,
        "summary": "Get general information of a company. Response JSON includes country, currency, exchange, market cap, shares outstanding, logo and industry.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/metrics": {
      "post": {
        "operationId": "metrics-post",
        "x-openai-isConsequential": false,
        "summary": "Get company current financial ratios such as P/E or P/FCF ratio. Includes most ratios that can be calculated from stock price and financial statements.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/metrics-time-series": {
      "post": {
        "operationId": "metrics-time-series-post",
        "x-openai-isConsequential": false,
        "summary": "Get company annual and quarterly historical financial ratios such as P/E or P/FCF ratio. Includes most ratios that can be calculated from stock price and financial statements.  JSON response includes annual and quarterly keys and then maps key-value pair of time-series ratios",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/revenue-breakdown": {
      "post": {
        "operationId": "revenue-breakdown-post",
        "x-openai-isConsequential": false,
        "summary": "Get revenue segment breakdown by product or geography.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/candles": {
      "post": {
        "operationId": "candles-post",
        "x-openai-isConsequential": false,
        "summary": "Get candlestick data (OHLCV) for stocks. Only 1 month of intraday will be returned at a time. If you need more historical intraday data, use the from_timestamp and to_timestamp params iteratively to request more data.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Candle"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/dividend": {
      "post": {
        "operationId": "dividend-post",
        "x-openai-isConsequential": false,
        "summary": "Get dividends data for common stocks going back 30 years.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimedResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/revenue-estimates": {
      "post": {
        "operationId": "revenue-estimates-post",
        "summary": "Get company's revenue estimates. Return JSON includes high, low, and average estimate as well as the number of analysts.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/ebit-estimates": {
      "post": {
        "operationId": "ebit-estimates-post",
        "summary": "Get company's ebit estimates. Return JSON includes high, low, and average estimate as well as the number of analysts.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/ebitda-estimates": {
      "post": {
        "operationId": "ebitda-estimates-post",
        "summary": "Get company's EBITDA estimates. Return JSON includes high, low, and average estimate as well as the number of analysts.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/eps-estimates": {
      "post": {
        "operationId": "eps-estimates-post",
        "summary": "Get company's EPS estimates. Return JSON includes high, low, and average estimate as well as the number of analysts.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/price-targets": {
      "post": {
        "operationId": "price-targets-post",
        "summary": "Get latest price target consensus.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/recommendation-trends": {
      "post": {
        "operationId": "recommendation-trends-post",
        "summary": "Get latest analyst recommendation trends for a company.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SymbolOnly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/earnings-calendar": {
      "post": {
        "operationId": "earnings-calendar-post",
        "summary": "Get historical and coming earnings release. EPS and Revenue in this endpoint are non-GAAP, which means they are adjusted to exclude some one-time or unusual items. Estimates are sourced from both sell-side and buy-side analysts.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimedResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/insider-transactions": {
      "post": {
        "operationId": "insider-transactions-post",
        "summary": "Company insider transactions data sourced from Form 3,4,5, SEDI and relevant companies' filings. Limit to 100 transactions per API call.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimedResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "JSON formatted data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DocumentChunkMetadata": {
        "title": "DocumentChunkMetadata",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/Source"
          },
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "form_type": {
            "$ref": "#/components/schemas/FormType"
          },
          "published_date": {
            "title": "Published Date",
            "type": "integer"
          },
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "symbol": {
            "title": "Stock Symbol",
            "type": "string"
          },
          "cik": {
            "title": "Stock CIK",
            "type": "string"
          },
          "fiscal_quarter": {
            "title": "Fiscal Quarter",
            "type": "integer"
          },
          "fiscal_year": {
            "title": "Fiscal Year",
            "type": "integer"
          },
          "is_xbrl": {
            "title": "Is XBRL",
            "type": "boolean"
          }
        }
      },
      "DocumentChunkWithScore": {
        "title": "DocumentChunkWithScore",
        "required": [
          "text",
          "metadata",
          "score"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/DocumentChunkMetadata"
          },
          "embedding": {
            "title": "Embedding",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "score": {
            "title": "Score",
            "type": "number"
          }
        }
      },
      "DocumentMetadataFilter": {
        "title": "DocumentMetadataFilter",
        "type": "object",
        "properties": {
          "form_types": {
            "title": "Form Types",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormType"
            }
          },
          "symbol": {
            "title": "Stock Symbol",
            "type": "string",
            "description": "The symbol for the stock being analyzed. This value should always be provided."
          },
          "fiscal_quarter": {
            "title": "Fiscal Quarter",
            "type": "integer",
            "description": "The fiscal quarter of the document being retrieved. This should be an integer from 1 to 4."
          },
          "fiscal_year": {
            "title": "Fiscal Year",
            "type": "integer",
            "description": "The fiscal year of the document being retrieved. This should be an integer of the year (e.g. 2023)"
          },
          "xbrl_only": {
            "title": "Xbrl Only",
            "type": "boolean"
          }
        }
      },
      "FinancialStatement": {
        "type": "object",
        "required": [
          "statement",
          "freq",
          "symbol"
        ],
        "properties": {
          "statement": {
            "type": "string",
            "enum": [
              "ic",
              "bs",
              "cf"
            ],
            "default": "ic",
            "description": "The type of financials statement. ic for income statement. bs for balance sheet. cf for cash flow."
          },
          "freq": {
            "type": "string",
            "enum": [
              "quarterly",
              "annual",
              "ttm",
              "ytd"
            ],
            "default": "annual",
            "description": "The frequency of data to retrieve."
          },
          "symbol": {
            "type": "string",
            "description": "The stock symbol to retrieve."
          }
        }
      },
      "Candle": {
        "type": "object",
        "required": [
          "symbol",
          "resolution",
          "from_timestamp",
          "to_timestamp"
        ],
        "properties": {
          "resolution": {
            "type": "string",
            "enum": [
              "1",
              "5",
              "15",
              "30",
              "60",
              "D",
              "W",
              "M"
            ],
            "default": "D",
            "description": "Supported resolution includes 1, 5, 15, 30, 60, D, W, M.  Some timeframes might not be available depending on the exchange."
          },
          "from_timestamp": {
            "type": "int",
            "description": "The UNIX timestamp of the interval initial value."
          },
          "to_timestamp": {
            "type": "int",
            "description": "The UNIX timestamp of the interval end value."
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "TimedResponse": {
        "type": "object",
        "required": [
          "symbol",
          "from_timestamp",
          "to_timestamp"
        ],
        "properties": {
          "from_timestamp": {
            "type": "int",
            "description": "The UNIX timestamp of the interval initial value."
          },
          "to_timestamp": {
            "type": "int",
            "description": "The UNIX timestamp of the interval end value."
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "Estimate": {
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "freq": {
            "type": "string",
            "enum": [
              "annual",
              "quarterly"
            ],
            "default": "quarterly",
            "description": "Frequency of estimates."
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "SymbolOnly": {
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Query": {
        "title": "Query",
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/DocumentMetadataFilter"
          },
          "sort_order": {
            "title": "Sort Order",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "description": "The order in which to sort when sorting by date. 'asc' for ascending, 'desc' for descending."
          },
          "limit": {
            "title": "Limit Documents",
            "type": "integer",
            "description": "The maximum number of documents to return.  Do not use when form_types is ['8-K'] and instead filter by fiscal_year and fiscal_quarter."
          },
          "top_k": {
            "title": "Top K",
            "type": "integer",
            "default": 20
          }
        }
      },
      "QueryRequest": {
        "title": "QueryRequest",
        "required": [
          "queries"
        ],
        "type": "object",
        "properties": {
          "queries": {
            "title": "Queries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Query"
            }
          }
        }
      },
      "QueryResponse": {
        "title": "QueryResponse",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryResult"
            }
          },
          "extra_information_for_assistant": {
            "title": "Extra Information",
            "type": "string",
            "description": "Extra information for you on how to respond to queries."
          }
        }
      },
      "QueryResult": {
        "title": "QueryResult",
        "required": [
          "query",
          "results"
        ],
        "type": "object",
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentChunkWithScore"
            }
          }
        }
      },
      "Source": {
        "title": "Source",
        "enum": [
          "SEC",
          "EarningsCallTranscripts"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "FormType": {
        "title": "Form Type",
        "enum": [
          "earnings_transcript",
          "10-K",
          "10-Q",
          "8-K",
          "DEFA14A",
          "DEF 14A",
          "S-1",
          "S-3",
          "6-K",
          "20-F"
        ],
        "type": "string",
        "description": "An enumeration describing type of document to retrieve. Always use 'earnings_transcript' for earnings calls. Use '10-K' or '10-Q' to summarize quarterly or annual results. Use '8-K' for news. Use 'DEF 14A' for information on a shareholder vote. Use 'S-1' for IPOs. Use 'S-3' for information on raising capital."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}